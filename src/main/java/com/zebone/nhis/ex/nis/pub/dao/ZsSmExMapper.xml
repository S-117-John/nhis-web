<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zebone.nhis.ex.nis.pub.dao.ZsSmExMapper">

	<!-- 根据条形码，查询lis采血项目相关记录 -->
	<select id="nisGetZyInfoFromHis" statementType="CALLABLE"
		parameterType="java.util.Map" resultType="com.zebone.nhis.ex.nis.ns.vo.ZsLisCxInfo">
		{call NisGetJyInfoFromLis(#{barCode,mode=IN,jdbcType=VARCHAR})}
	</select>
	
	<!-- 根据条形码，更新Lis采血项目相关记录 -->
	<update id="nisSetGatherInfoToLis" statementType="CALLABLE" parameterType="java.util.Map">
	   {call NisSetGatherInfoToLis(#{barCode,mode=IN,jdbcType=VARCHAR}, 
	   #{dateEx,mode=IN,jdbcType=TIMESTAMP}, #{codeEmpEx,mode=IN,jdbcType=VARCHAR})}
	</update>
	
	<!-- 根据医嘱号查询医嘱执行单 -->
	<select id="getExlistByOrdsn" parameterType="java.util.Map" 
		resultType="com.zebone.nhis.ex.pub.vo.ExlistPubVo">
	select pv.pk_pv, pv.bed_no, pv.name_pi, pv.pk_pi, pv.eu_pvtype , pv.pk_dept as pk_dept_pv,
	       exlist.pk_exocc, exlist.date_plan, exlist.date_occ, exlist.quan_occ, exlist.name_emp_occ,
	       exlist.pk_unit, exlist.eu_status, exlist.flag_self, exlist.flag_base, exlist.pk_org_occ, exlist.pack_size,
	       unit.name as name_unit, dept.name_dept as name_dept_occ, org.name_org as name_org_occ,
	       ord.flag_durg, ord.name_ord, ord.flag_bl, ord.infant_no, ord.pk_cnord, ord.pk_ord, ord.pk_pres,
	       ord.pk_org, ord.pk_dept, ord.pk_dept_exec, ord.pk_dept_ns, ord.code_supply, ord.ordsn,
	       ord.pk_emp_ord, ord.name_emp_ord, ord.ordsn_parent, supply.flag_st,
	       freq.name as name_freq, freq.eu_always as eu_always_freq,
	       supply.name as name_supply, ord.eu_always, ord.eu_st
	  from ex_order_occ exlist
	 inner join cn_order ord on ord.pk_cnord = exlist.pk_cnord
	 inner join pv_encounter pv on pv.pk_pv = exlist.pk_pv
	 inner join pi_master pi on pi.pk_pi = pv.pk_pi
	  left join bd_unit unit on unit.pk_unit = exlist.pk_unit
	  left join bd_ou_dept dept on dept.pk_dept = exlist.pk_dept_occ
	  left join bd_ou_org org on org.pk_org = exlist.pk_org_occ
	  left join bd_term_freq freq on freq.code = ord.code_freq
	  left join bd_supply supply on supply.code = ord.code_supply 
	 where exlist.eu_status = '0'
	<if test="codeIp != null  and  codeIp != ''">
	  and pi.code_ip = #{codeIp,jdbcType=VARCHAR}
	</if>
	<if test="ordsns != null  and  ordsns != ''">
      and ord.ordsn in 
		<foreach item="ordsn" index="index" collection="ordsns" open="(" separator="," close=")">
           #{ordsn}   
        </foreach>
	 </if>
	 	order by pv.bed_no,ord.ordsn_parent,exlist.date_plan,ord.ordsn
	</select>

	<!-- 根据执行单主键更新执行单 -->
	<update id="updateCxExlist" parameterType="java.util.Map">
		update ex_order_occ set eu_status='1', date_occ = #{dateOcc,jdbcType=TIMESTAMP},
		 pk_dept_occ = #{pkDept,jdbcType=VARCHAR}, pk_org_occ = #{pkOrg,jdbcType=VARCHAR}, 
		 pk_emp_occ=#{pkEmp,jdbcType=VARCHAR}, name_emp_occ=#{nameEmp,jdbcType=VARCHAR}
		where 1=1
		<if test="pkExoccs != null  and  pkExoccs != ''">
      		and ex_order_occ.pk_exocc in 
			<foreach item="pkExocc" index="index" collection="pkExoccs" open="(" separator="," close=")">
           		#{pkExocc}   
        	</foreach>
	 	</if>
	</update>
	
	<!-- 根据医嘱号查询医嘱执行单 + 申请单信息 -->
	<select id="getExAndAppByOrdsn" parameterType="java.util.Map" 
		resultType="com.zebone.nhis.ex.pub.vo.CnOrdAndAppVo">
	select pv.pk_pv, pv.bed_no, pv.name_pi, pv.pk_pi, pv.eu_pvtype , pv.pk_dept as pk_dept_pv,
	       exlist.pk_exocc, exlist.date_plan, exlist.date_occ, exlist.quan_occ, exlist.name_emp_occ,
	       exlist.pk_unit, exlist.eu_status, exlist.flag_self, exlist.flag_base, exlist.pk_org_occ, exlist.pack_size,
	       unit.name as name_unit, dept.name_dept as name_dept_occ, org.name_org as name_org_occ,
	       ord.flag_durg, ord.name_ord, ord.flag_bl, ord.infant_no, ord.pk_cnord, ord.pk_ord, ord.pk_pres,
	       ord.pk_org, ord.pk_dept, ord.pk_dept_exec, ord.pk_dept_ns, ord.code_supply, ord.ordsn,
	       ord.pk_emp_ord, ord.name_emp_ord, ord.ordsn_parent, supply.flag_st,
	       freq.name as name_freq, freq.eu_always as eu_always_freq,
	       supply.name as name_supply, ord.eu_always, ord.eu_st,
	       app.date_col,app.eu_status as app_status,app.pk_dept_col,app.pk_emp_col,
	       app.name_emp_col,deptCol.name_dept as name_dept_col
	  from ex_order_occ exlist
	 inner join cn_order ord on ord.pk_cnord = exlist.pk_cnord
	 inner join pv_encounter pv on pv.pk_pv = exlist.pk_pv
	 inner join pi_master pi on pi.pk_pi = pv.pk_pi  
	  left join bd_unit unit on unit.pk_unit = exlist.pk_unit
	  left join bd_ou_dept dept on dept.pk_dept = exlist.pk_dept_occ
	  left join bd_ou_org org on org.pk_org = exlist.pk_org_occ
	  left join bd_term_freq freq on freq.code = ord.code_freq
	  left join bd_supply supply on supply.code = ord.code_supply 
	  left join cn_lab_apply app on app.pk_cnord = ord.pk_cnord
	  left join bd_ou_dept deptCol on deptCol.pk_dept = app.pk_dept_col
	 where 1 = 1
	 <if test="codeIp != null  and  codeIp != ''">
	  and pi.code_ip = #{codeIp,jdbcType=VARCHAR}
	</if>
	<if test="ordsns != null  and  ordsns != ''">
      and ord.ordsn in 
		<foreach item="ordsn" index="index" collection="ordsns" open="(" separator="," close=")">
           #{ordsn}   
        </foreach>
	 </if>
	 	order by pv.bed_no,ord.ordsn_parent,exlist.date_plan,ord.ordsn
	</select>
	
	<!-- 根据条形码更新检验申请单状态 -->
	<update id="updateCxApp" parameterType="java.util.Map">
		update cn_lab_apply set eu_status='2', date_col = #{dateCol,jdbcType=TIMESTAMP}, pk_dept_col = #{pkDeptCol,jdbcType=VARCHAR},
		 pk_emp_col=#{pkEmpCol,jdbcType=VARCHAR}, name_emp_col=#{nameEmpCol,jdbcType=VARCHAR}
		where samp_no =#{sampNo,jdbcType=VARCHAR}
	</update>
</mapper>

