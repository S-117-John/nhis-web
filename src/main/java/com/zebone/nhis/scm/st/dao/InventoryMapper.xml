<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zebone.nhis.scm.st.dao.InventoryMapper">
<select id="queryInvenList" parameterType="java.util.Map" resultType="com.zebone.nhis.scm.st.vo.InventoryVo">
select inv.*,
       invtype.name invtype 
  from pd_inventory inv
       inner join bd_defdoc invtype on inv.dt_invtype=invtype.code and invtype.code_defdoclist='080009'
       and  exists (select 1 from pd_inv_detail dt 
	                inner join bd_pd pd on pd.pk_pd = dt.pk_pd 
	                where dt.pk_pdinv = inv.pk_pdinv and pd.dt_pdtype like '0%')
 where inv.pk_store = #{pkStore,jdbcType=CHAR} 
       <if test="codeInv != null  and  codeInv != ''">
          and inv.code_inv = #{codeInv,jdbcType=VARCHAR} 
       </if>
       <if test="dateBegin != null  and  dateBegin != ''">
          and inv.date_inv &gt;= to_date(#{dateBegin},'YYYYMMDDHH24MISS')  
       </if>
       <if test="dateEnd != null  and  dateEnd != ''">
          and inv.date_inv &lt;= to_date(#{dateEnd},'YYYYMMDDHH24MISS') 
       </if>
       <if test="euStatus != null  and  euStatus != ''"> 
          and inv.eu_status = #{euStatus,jdbcType=VARCHAR}
       </if>
       order by inv.date_inv
</select>
<select id="queryInvenDtList" parameterType="java.util.Map" resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
select dt.pk_pd,
       pd.code pdcode,
       pd.name pdname,
       pd.spec,
       pd.spcode,
       unit.name unit,
       fa.name factory,
       pd.pack_size as pack_size_pd,
       sum(dt.quan_pack_acc) as quan_pack_acc, 
       sum(dt.quan_min_acc) as quan_min_acc,  
       sum(dt.quan_pack) as quan_pack,     
       sum(dt.quan_min) as quan_min,      
       sum(dt.quan_diff/dt.pack_size) as quan_diff,     
       sum(dt.quan_pack_acc*dt.pack_size/pd.pack_size*dt.price) as amt_acc, 
       sum(dt.quan_pack*dt.pack_size/pd.pack_size*dt.price) as amt,        
       dt.reason_diff,   
       dt.pk_unit_pack,   
       dt.note,
       pd.barcode old_code,
       dt.posi_no,
       min.name name_min,
       pd.EU_DRUGTYPE,
       pd.price price_pd
  from pd_inv_detail dt
       inner join bd_pd pd on dt.pk_pd=pd.pk_pd
       inner join bd_factory fa on pd.pk_factory=fa.pk_factory
       inner join bd_unit unit on dt.pk_unit_pack=unit.pk_unit
       inner join bd_unit min on min.pk_unit=pd.pk_unit_min
 where dt.pk_pdinv = #{pkPdinv,jdbcType=CHAR} and pd.dt_pdtype like '0%'
 group by dt.pk_pd,
          pd.code,
          pd.name,
          pd.spec,
          pd.spcode,
          unit.name,
          dt.reason_diff,
          dt.note,
          fa.name,
          pd.pack_size  ,
          dt.pk_unit_pack  ,
          pd.barcode    ,
          dt.posi_no,
          min.name,
          pd.EU_DRUGTYPE,
          pd.price
</select>
<select id="queryInvenRealDtList" parameterType="java.util.Map" resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
	select dt.pk_pd,
	  pd.code                                                           pdcode,
	  pd.name                                                           pdname,
	  pd.spec,
	  pd.spcode,
	  unit.name                                                         unit,
	  fa.name                                                           factory,
	  pd.barcode old_code,
	  pd.pack_size                                                   AS pack_size_pd,
	  min.name name_min,
	  pd.price price_pd,pd.EU_DRUGTYPE,
	  dt.*
	from pd_inv_detail dt INNER JOIN bd_pd pd ON dt.pk_pd = pd.pk_pd
	  INNER JOIN bd_factory fa ON pd.pk_factory = fa.pk_factory
	  INNER JOIN bd_unit unit ON dt.pk_unit_pack = unit.pk_unit
	  inner join bd_unit min on min.pk_unit=pd.pk_unit_min
	 where dt.pk_pdinv = #{pkPdinv,jdbcType=CHAR}  and pd.dt_pdtype like '0%'  
</select>
<select id="queryAllPdStockList" resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
select pd.pk_pd,
       pd.code pdcode,
       pd.name pdname,
       pd.spec,
       pd.spcode,
       pd.pk_unit_pack as pk_unit_pack,  
       unit.name unit,
       fa.name factory,
       pd.pack_size,
       pd.pack_size as pack_size_pd,
       sum(stk.quan_min) quan_min_acc,
       sum(stk.quan_min / nvl(pd.pack_size,1)) quan_pack_acc,
       sum(stk.amount) amt_acc, 
       pds.posi_no ,
       pd.price price_pd
  from pd_stock stk 
       inner join bd_pd_store pds on pds.pk_pd = stk.pk_pd and pds.pk_store = stk.pk_store 
       inner join bd_pd pd on stk.pk_pd=pd.pk_pd 
       inner join bd_unit unit on cvt.pk_unit=unit.pk_unit 
       inner join bd_factory fa on pd.pk_factory=fa.pk_factory
 where stk.pk_store = #{pkStore,jdbcType=CHAR} and pd.dt_pdtype like '0%'
 group by 
       pd.pk_pd,
       pd.code,
       pd.name,
       pd.spec,
       pd.pk_unit_pack,
       pd.spcode,
       unit.name,
       fa.name,
       pd.pack_size,
       pds.posi_no,
       pd.pack_size ,
       pd.price 
</select>
<select id="queryPdStockByConList" parameterType="java.util.Map" resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
select pd.pk_pd,
       pd.code pdcode,
       pd.name pdname,
       pd.spec,
       pd.pk_unit_pack as pk_unit_pack,
       pd.spcode,
       unit.name unit,
       fa.name factory,
       pd.pack_size,
       pd.pack_size as pack_size_pd,
       sum(stk.quan_min) quan_min_acc,
       sum(stk.quan_min / nvl(pd.pack_size,1)) quan_pack_acc,
       sum(stk.amount) amt_acc,
       pds.posi_no ,
       pd.price price_pd
  from pd_stock stk 
       inner join bd_pd_store pds on pds.pk_pd = stk.pk_pd and pds.pk_store = stk.pk_store 
       inner join bd_pd pd on stk.pk_pd=pd.pk_pd
       inner join bd_unit unit on cvt.pk_unit=unit.pk_unit
       inner join bd_factory fa on pd.pk_factory=fa.pk_factory
 where stk.pk_store = #{pkStore,jdbcType=CHAR} 
       and pd.dt_pdtype like '0%'
 		<if test="posis != null  and  posis != ''">
 		      and pds.posi_no in
 		       <foreach item="posi" index="index" collection="posis" open="(" separator="," close=")">
            	   #{posi}    
               </foreach>
       </if>
       <if test="drugtypes != null  and  drugtypes != ''">
          and pd.eu_drugtype in 
         <foreach item="drugtype" index="index" collection="drugtypes" open="(" separator="," close=")">
            	   #{drugtype}    
          </foreach>
        </if>
       <if test="dtpois != null  and  dtpois != ''">
         and pd.dt_pois in 
         <foreach item="pois" index="index" collection="dtpois" open="(" separator="," close=")">
            	   #{pois}    
          </foreach>
       </if>
       <if test="usecates != null  and  usecates != ''">
          and pd.eu_usecate in 
          <foreach item="usecate" index="index" collection="usecates" open="(" separator="," close=")">
            	   #{usecate}    
          </foreach>
       </if>
       <if test="antis != null  and  antis != ''">
          and pd.dt_anti in 
          <foreach item="anti" index="index" collection="antis" open="(" separator="," close=")">
            	   #{anti}    
          </foreach>
       </if>
        
        <if test="flagSql != null  and  flagSql != ''">
          and ( ${flagSql} )
        </if>
       
       <if test=' flagHis=="1" '>
        and (${flagHisSql}) 
       </if> 
       group by 
       pd.pk_pd,
       pd.code,
       pd.name,
       pd.spec,
       pd.pk_unit_pack,
       pd.spcode,
       unit.name,
       fa.name,
       pd.pack_size,
       pds.posi_no,
       pd.pack_size ,
       pd.price   
</select>
<select id="queryPdAccNum"  resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
select stk.pk_pd,
  pd.code                              pdcode,
  pd.name                              pdname,
  pd.spec,
  fa.name                              factory,
  stk.batch_no,
  stk.date_expire,
  stk.price_cost,
  stk.price,
  stk.quan_min AS                      quan_min_acc,
  stk.quan_min / nvl(pd.pack_size, 1) quan_pack_acc,
  stk.quan_min / nvl(pd.pack_size, 1) quan_pack,
  stk.amount                           amt_acc,
  stk.quan_min,
  pd.PK_UNIT_PACK  AS                      pk_unit_pack,
  pd.pack_size,
  pd.pack_size AS                      pack_size_pd,
  unit.name    AS                      unit,
  pds.posi_no,
  pd.price price_pd
  from pd_stock stk
       inner join bd_pd_store pds  on pds.pk_pd = stk.pk_pd and pds.pk_store = stk.pk_store 
       inner join bd_pd pd on stk.pk_pd=pd.pk_pd
       inner join bd_factory fa on fa.pk_factory=pd.pk_factory
       inner join bd_unit unit on pd.pk_unit_pack = unit.pk_unit
 where stk.pk_store= #{pkStore,jdbcType=CHAR} and pd.pk_pd = #{pkPd,jdbcType=CHAR} and pd.dt_pdtype like '0%'
</select>

<select id="queryPdAccNumBymode" parameterType="java.util.Map" resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
select 
  pd.pk_pd,
  pd.code                              pdcode,
  pd.name                              pdname,
  pd.spec,
  fa.name                              factory,
  stk.batch_no,
  stk.date_expire,
  stk.price_cost,
  stk.price,
  stk.quan_min AS                      quan_min_acc,
  stk.quan_min / nvl(pd.pack_size, 1) quan_pack_acc,
  stk.quan_min / nvl(pd.pack_size, 1) quan_pack,
  stk.amount                           amt_acc,
  stk.quan_min,
  pd.PK_UNIT_PACK  AS                      pk_unit_pack,
  pd.pack_size,
  pd.pack_size AS                      pack_size_pd,
  unit.name    AS                      unit,
  pds.posi_no,
  pd.price price_pd
  from bd_pd_store  pds
       left join pd_stock stk   on pds.pk_pd = stk.pk_pd and pds.pk_store = stk.pk_store 
       inner join bd_pd pd on pds.pk_pd=pd.pk_pd
       inner join bd_factory fa on fa.pk_factory=pd.pk_factory
       inner join bd_unit unit on pd.pk_unit_pack = unit.pk_unit
 where pds.pk_store= #{pkStore,jdbcType=CHAR}
 <if test="codePdList != null and  codePdList != ''">
    	    and (pd.code  in 
			  <trim suffixOverrides=" OR   pd.code  in ()">    <!-- 表示删除最后一个条件 -->
		          <foreach collection="codePdList" item="code" index="index" open="(" close=")">
		            <if test="index != 0">
		              <choose>
		                 <when test="index % 1000 == 999">) OR pd.code  in (</when>
		                     <otherwise>,</otherwise>
		              </choose>
		            </if>
		            #{code}
		          </foreach>
		       </trim>
			)
	       </if>
  
  and pd.dt_pdtype like '0%'
</select>

<select id="queryInvtDtByDiff" parameterType="java.util.Map" resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
select pd.code pdcode,
       pd.name pdname,
       pd.spec,
       pd.pk_pd,
       unit.name unit,
       fa.name factory,
       dt.pack_size,
       pd.pack_size as pack_size_pd,
       dt.pk_unit_pack,
       dt.quan_diff/dt.pack_size as quan_diff,
       dt.price_cost,
       dt.price,
       dt.batch_no,
       dt.date_expire,
       dt.quan_diff/pd.pack_size * dt.price_cost amt_cost,
       dt.quan_diff/pd.pack_size * dt.price amt,
       pd.price price_pd
  from pd_inv_detail dt
       inner join bd_pd pd on dt.pk_pd=pd.pk_pd
       inner join bd_factory fa on pd.pk_factory=fa.pk_factory
       inner join bd_unit unit on dt.pk_unit_pack=unit.pk_unit
 where dt.pk_pdinv=#{pkPdinv,jdbcType=CHAR} 
       and pd.dt_pdtype like '0%'
       <if test='flag =="0"'>
        and dt.quan_diff&lt;&gt;0
       </if>
 		<if test='flag =="1"'>
        and dt.quan_diff&gt;0
       </if>
       <if test='flag =="2"'>
        and dt.quan_diff&lt;0
       </if>
</select>
<select id="queryAccNum"   parameterType="java.util.Map"  resultType="com.zebone.nhis.scm.pub.vo.PdStockVo">
select stk.pk_pd,
       sum(stk.amount) as amount,
       sum(stk.quan_min) as quan_min,
       sum(stk.quan_min/nvl(cvt.pack_size,1)) as quan_pack 
  from pd_stock stk 
       inner join bd_pd_store pds on pds.pk_pd = stk.pk_pd and pds.pk_store = stk.pk_store 
       inner join bd_pd pd on pd.pk_pd=stk.pk_pd
       inner join bd_pd_convert cvt on cvt.pk_pdconvert = pds.pk_pdconvert   
 where stk.pk_store= #{pkStore,jdbcType=CHAR} 
       and pd.dt_pdtype like '0%'
 <!-- and stk.pk_pd in 
        <foreach item="pkPd" index="index" collection="pkPds" open="(" separator="," close=")">
            	   #{pkPd}    
        </foreach> -->
 group by stk.pk_pd
</select>


	<select id="qryBatchNoByPkPd" parameterType="java.util.Map" resultType="DynaBean">
		 select dt.pk_pdinvdt,   
		       dt.pk_pdinv,     
		       dt.pk_pd,        
		       pd.name,        
		       pd.spec,         
		       dt.pk_unit_pack, 
		       dt.pack_size,    
		       dt.batch_no,     
		       dt.date_expire,  
		       dt.posi_no,      
		       dt.price,        
		       dt.price_cost,   
		       dt.quan_pack_acc,
		       dt.quan_min_acc, 
		       dt.quan_pack,    
		       dt.quan_min ,
		       pd.pack_size pack_size_pd     
		  from pd_inv_detail dt
		       inner join bd_pd pd on dt.pk_pd=pd.pk_pd
		 where dt.pk_pdinv=#{pkPdinv,jdbcType=VARCHAR} and  
		       dt.pk_pd=#{pkPd,jdbcType=VARCHAR}
		       and pd.dt_pdtype like '0%'
	</select>
	
	<select id="qryRealInvDtAll" parameterType="java.lang.String" resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
			select pd.pk_pd,
		       pd.code pdcode,
		       pd.name pdname,
		       pd.spcode,
		       pd.spec,
		       unit.pk_unit ,
		       unit.name unit,
		       fa.name factory,
		       pd.pack_size pack_size_pd,
		       stk.price_cost,
		       stk.price,
		       pd.pack_size,
		       pd.pk_unit_pack,
		       stk.quan_min quan_min_acc,
		       stk.quan_min/pd.pack_size quan_pack_acc,
		       stk.batch_no,
		       stk.date_expire,
			   stk.AMOUNT amt_acc,
		       pds.posi_no,
		       pd.barcode old_code,
		       min.pk_unit pk_unit_min,
		       min.name name_min,
		       pd.EU_DRUGTYPE,
		       pd.price price_pd
		  from bd_pd_store pds
       inner join bd_pd pd on pds.pk_pd=pd.pk_pd
       inner join bd_unit unit on pd.pk_unit_pack=unit.pk_unit
       inner join bd_factory fa on pd.pk_factory=fa.pk_factory
       inner join bd_unit min on min.pk_unit=pd.pk_unit_min
       left outer join pd_stock stk on pds.pk_pd=stk.pk_pd and pds.pk_store=stk.pk_store

		WHERE pds.pk_store = #{pkStore,jdbcType=VARCHAR} and pd.dt_pdtype like '0%'
	</select>
	
	<select id="qryRealInvDtKind" parameterType="java.util.Map" resultType="com.zebone.nhis.scm.st.vo.InventoryDtVo">
		select pd.pk_pd,
		       pd.code pdcode,
		       pd.name pdname,
		       pd.spec,
		       pd.spcode,
		       unit.pk_unit ,
		       unit.name unit,
		       fa.name factory,
		       pd.pack_size pack_size_pd,
		       stk.price_cost,
		       stk.price,
		       pd.pack_size,
		       pd.pk_unit_pack,
		       stk.quan_min quan_min_acc,
		       stk.quan_min/pd.pack_size quan_pack_acc,
		       stk.batch_no,
		       stk.date_expire,
               stk.AMOUNT amt_acc,
		       pds.posi_no,
		       pd.barcode old_code,
		       min.pk_unit pk_unit_min,
		       min.name name_min,
		       pd.EU_DRUGTYPE,
		       pd.price price_pd
		   from bd_pd_store pds
	       inner join bd_pd pd on pds.pk_pd=pd.pk_pd
	       inner join bd_unit unit on pd.pk_unit_pack=unit.pk_unit
	       inner join bd_factory fa on pd.pk_factory=fa.pk_factory
	       inner join bd_unit min on min.pk_unit=pd.pk_unit_min
	       left outer join pd_stock stk on pds.pk_pd=stk.pk_pd and pds.pk_store=stk.pk_store
		WHERE pds.pk_store = #{pkStore,jdbcType=VARCHAR} and pd.dt_pdtype like '0%'
		<if test="posis != null  and  posis != ''">
 		      and ( ${posiSql} )
       </if>
       <if test="drugtypes != null  and  drugtypes != ''">
          and pd.eu_drugtype in
         <foreach item="drugtype" index="index" collection="drugtypes" open="(" separator="," close=")">
            	   ${drugtype}
          </foreach>
        </if>
       <if test="dtpois != null  and  dtpois != ''">
         and pd.dt_pois in 
         <foreach item="pois" index="index" collection="dtpois" open="(" separator="," close=")">
            	   #{pois}    
          </foreach>
       </if>
       <if test="usecates != null  and  usecates != ''">
          and pd.eu_usecate in 
          <foreach item="usecate" index="index" collection="usecates" open="(" separator="," close=")">
            	   #{usecate}    
          </foreach>
       </if>
       <if test="antis != null  and  antis != ''">
          and pd.dt_anti in 
          <foreach item="anti" index="index" collection="antis" open="(" separator="," close=")">
            	   #{anti}    
          </foreach>
       </if>
        
        <if test="flagSql != null  and  flagSql != ''">
          and ( ${flagSql} )
        </if>
       
       <if test=' flagHis=="1" '>
        and (${flagHisSql}) 
       </if> 
	</select>
</mapper>