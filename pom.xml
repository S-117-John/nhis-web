<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>nhis</artifactId>
		<groupId>com.zebone</groupId>
		<version>0.0.1</version>
	</parent>

	<groupId>com.zebone</groupId>
	<artifactId>nhis-web</artifactId>
	<version>0.0.1-release</version>
	<packaging>war</packaging>
	<name>nhis-web</name>
	<description>nhis-web project for Spring Boot</description>


	<properties>

		<jarFileName>nhis</jarFileName>
		<warFileName>nhis</warFileName>
		<buildNumber>${maven.build.timestamp}</buildNumber>
		<maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
		<maven.deploy.skip>true</maven.deploy.skip>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.zebone</groupId>
			<artifactId>nhis-framework</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<!-- 这里和starter-quartz版本一致，只是不使用自动配置（低版本已经完全和Spring不匹配）-->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.2</version>
		</dependency>
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-quartz</artifactId>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>tomcat-annotations-api</artifactId>
					<groupId>org.apache.tomcat</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.7.2</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>23.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.6</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.birt.runtime.3_7_1</groupId>
			<artifactId>com.lowagie.text</artifactId>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13.1</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.65</version>
		</dependency>
		<!--<dependency>
			<groupId>org.apache.santuario</groupId>
			<artifactId>xmlsec</artifactId>
			<version>1.5.8</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>-->

		<dependency>
			<groupId>ca.uhn.hapi</groupId>
			<artifactId>hapi-base</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi</groupId>
			<artifactId>hapi-structures-v24</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jms_1.1_spec</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>com.belerweb</groupId>
			<artifactId>pinyin4j</artifactId>
			<version>2.5.1</version>
		</dependency>
		<dependency>
			<groupId>com.esotericsoftware.kryo</groupId>
			<artifactId>kryo</artifactId>
			<version>2.24.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.objenesis</groupId>
					<artifactId>objenesis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.1</version>
			<!-- jdk1.5的意思-->
			<classifier>jdk15</classifier>
			<exclusions>
				<exclusion>
					<groupId>commons-beanutils</groupId>
					<artifactId>commons-beanutils</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-collections</groupId>
					<artifactId>commons-collections</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.mina</groupId>
			<artifactId>mina-core</artifactId>
			<version>2.1.4</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.5.12</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.grizzly</groupId>
			<artifactId>grizzly-core</artifactId>
			<version>2.4.4</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-spring-boot-starter-jaxws</artifactId>
		</dependency>

		<dependency>
			<groupId>jexcelapi</groupId>
			<artifactId>jxl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.13.1</version>
		</dependency>
		<dependency>
			<groupId>com.foxinmy</groupId>
			<artifactId>weixin4j-base</artifactId>
			<version>1.7.8</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>

		<dependency>
			<groupId>com.local.ext</groupId>
			<artifactId>redis-ratelimit</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.local.ext</groupId>
			<artifactId>ciyun_rpt_encrypt_java</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.local.ext</groupId>
			<artifactId>zebone-mq</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.local.ext</groupId>
			<artifactId>javacsv</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.local.ext</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>0.1</version>
		</dependency>
		<dependency>
			<groupId>com.local.ext</groupId>
			<artifactId>zebone-resources</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>sqljdbc4</artifactId>
			<version>4.0</version>
		</dependency>
		<!--<dependency>
			<groupId>zebone</groupId>
			<artifactId>zebone-resources</artifactId>
			<version>0.0.1</version>
			<type>jar</type>
			<scope>system</scope>
			<systemPath>${pom.basedir}/lib/zebone-resources-0.0.1-SNAPSHOT.jar</systemPath>
		</dependency>-->

		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!--  利用maven的profiles可以灵活打jar包或war包  -->
	<!-- 依据不同的profile打包指定环境
		mvn clean install -Dmaven.test.skip=true -DprofileActive=dev
		或者mvn clean package -P pro
		或者idea中勾选右侧的profile，然后选中对应命令执行即可
	-->
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profileActive>dev</profileActive>
			</properties>
			<activation>
				<!-- 默认环境标识-->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>pro</id>
			<properties>
				<profileActive>pro</profileActive>
			</properties>
		</profile>


		<profile>
			<!--  mvn clean install -DskipTests -Pjar  -->
			<id>jar</id>
			<!-- 激活这个profile为默认profile ,即默认clean install打jar包    -->
			<!--<activation>
				<activeByDefault>true</activeByDefault>
			</activation>-->
			<properties>
				<project.packaging>jar</project.packaging>
			</properties>
			<build>
				<finalName>${jarFileName}</finalName>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<outputDirectory>${project.build.directory}/release/${buildNumber}</outputDirectory>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<tasks>
										<copy todir="${project.build.directory}/release/${buildNumber}">
											<fileset dir="${project.build.directory}">
												<include name="${jarFileName}.jar"/>
											</fileset>
										</copy>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--  SpringBoot打war包,需要让主程序类 继承 SpringBootServletInitializer,并重写configure方法    -->
		<profile>
			<!--  mvn clean compile package -Pwar -DskipTests -DprofileActive=dev -->
			<id>war</id>
			<!-- 激活这个profile为默认profile ,即默认clean install打war包    -->
			<!--<activation>
				<activeByDefault>true</activeByDefault>
			</activation>-->
			<properties>
				<project.packaging>war</project.packaging>
			</properties>
			<build>
				<finalName>${warFileName}</finalName>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<outputDirectory>${project.build.directory}/release/${buildNumber}</outputDirectory>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<tasks>
										<copy todir="${project.build.directory}/release/${buildNumber}">
											<fileset dir="${project.build.directory}">
												<include name="${warFileName}.war"/>
											</fileset>
										</copy>
										<delete file="${project.build.directory}/${warFileName}.war" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.zebone.WebApplication</mainClass>
					<fork>true</fork>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.3</version>
			</plugin>
		</plugins>
		<resources>
			<!--指定*Mapper.xml的位置，否则xml发布不到目录-->
			<resource>
				<directory>${basedir}/src/main/java</directory>
				<includes>
					<include>com/zebone/**/dao/*Mapper.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>${basedir}/src/main/etc</directory>
				<includes>
					<include>logback-${profileActive}.xml</include>
					<include>mybatisConfig.xml</include>
					<include>quartz.properties</include>
					<include>**/config/**</include>
				</includes>
				<filtering>true</filtering>
			</resource>

			<resource>
				<!-- 指定resources插件处理哪个目录下的资源文件 -->
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>application-${profileActive}.yml</include>
					<include>application.yml</include>
					<include>application-ws.yml</include>
					<include>banner.txt</include>
					<include>**/templates/**</include>
					<include>**/static/**</include>
				</includes>
				<filtering>true</filtering>
			</resource>

			<resource>
				<!-- 源文件夹 -->
				<directory>${basedir}/src/main/webapp</directory>
				<!-- 指定编译到的路径为 META-INF/resources -->
				<targetPath>META-INF/resources</targetPath>
				<!-- 指定源文件夹中的哪些资源需要进行编译 -->
				<includes>
					<include>*.*</include>
				</includes>
			</resource>


		</resources>
	</build>
	<repositories>
		<repository>
			<id>maven-nexus</id>
			<name>our mirror.</name>
			<url>http://192.168.100.224:8081/repository/zb-repositories/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>nexus-aliyun</id>
			<name>nexus-aliyun</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>